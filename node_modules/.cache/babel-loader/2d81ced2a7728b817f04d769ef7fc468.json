{"ast":null,"code":"var _jsxFileName = \"/home/syvolia/Documents/Personal Projects/Web Apps/jobsearch/jobsearch board/client/src/Jobs.js\";\nimport React, { useState } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Job from './Job';\nimport JobModal from './JobModal';\nimport Hero from \"../src/components/Hero\";\nimport Banner from \"../src/components/Banner\";\nimport Filter from './filter';\nimport MobileStepper from '@material-ui/core/MobileStepper';\nimport Button from '@material-ui/core/Button';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nexport default function Jobs({\n  jobs\n}) {\n  const [word, setWord] = useState(\"\");\n  const [filterDisplay, setFilterDisplay] = useState([]);\n  React.useEffect(() => {\n    const welcomeItem = document.querySelectorAll('.welcome-item');\n    let delay = 0;\n    welcomeItem.forEach(item => {\n      setTimeout(() => item.style.opacity = 1, delay);\n      delay += 500;\n    });\n  }, []);\n\n  const handleChange = e => {\n    setWord(e);\n    let oldList = jobs.map(job => {\n      return {\n        title: job.title.toLowercase(),\n        location: job.title.location\n      };\n    });\n\n    if (word !== \"\") {\n      let newList = [];\n      newList = oldList.filter(job => job.title.includes(word.toLocaleLowerCase()));\n      setFilterDisplay(newList);\n    } else {\n      setFilterDisplay(jobs);\n    }\n  }; // modal\n\n\n  const [open, setOpen] = React.useState(false);\n  const [selectedJob, selectJob] = React.useState({});\n\n  function handleClickOpen() {\n    setOpen(true);\n  }\n\n  function handleClose() {\n    setOpen(false);\n  } // pagination\n\n\n  const numJobs = jobs.length;\n  const numPages = Math.ceil(numJobs / 50);\n  const [activeStep, setActiveStep] = React.useState(0);\n  const jobsOnPage = jobs.slice(activeStep * 50, activeStep * 50 + 50); // step == 0, show 0-49\n  // step == 1, show 50 - 99\n\n  function scrollToTop() {\n    const c = document.documentElement.scrollTop || document.body.scrollTop;\n\n    if (c > 0) {\n      window.requestAnimationFrame(scrollToTop);\n      window.scrollTo(0, c - c / 8);\n    }\n  }\n\n  ;\n\n  function handleNext() {\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n    scrollToTop();\n  }\n\n  function handleBack() {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n    scrollToTop();\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"jobs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Hero, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Banner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(JobModal, {\n    open: open,\n    job: selectedJob,\n    handleClose: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Filter, {\n    value: word,\n    handleChange: e => handleChange(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h4\",\n    component: \"h1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, \"Entry Level  Software Jobs\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    component: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, \"Found \", numJobs, \" Jobs\"), filterDisplay.map((job, i) => /*#__PURE__*/React.createElement(Job, {\n    key: i,\n    job: job,\n    onClick: () => {\n      console.log('clicked');\n      handleClickOpen();\n      selectJob(job);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }, \"Page \", activeStep + 1, \" of \", numPages), /*#__PURE__*/React.createElement(MobileStepper, {\n    variant: \"progress\",\n    steps: numPages,\n    position: \"static\",\n    activeStep: activeStep,\n    nextButton: /*#__PURE__*/React.createElement(Button, {\n      size: \"small\",\n      onClick: handleNext,\n      disabled: activeStep === numPages - 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 21\n      }\n    }, \"Next\", /*#__PURE__*/React.createElement(KeyboardArrowRight, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 21\n      }\n    })),\n    backButton: /*#__PURE__*/React.createElement(Button, {\n      size: \"small\",\n      onClick: handleBack,\n      disabled: activeStep === 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(KeyboardArrowLeft, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 21\n      }\n    }), \"Back\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }));\n}","map":{"version":3,"sources":["/home/syvolia/Documents/Personal Projects/Web Apps/jobsearch/jobsearch board/client/src/Jobs.js"],"names":["React","useState","Typography","Job","JobModal","Hero","Banner","Filter","MobileStepper","Button","KeyboardArrowLeft","KeyboardArrowRight","Jobs","jobs","word","setWord","filterDisplay","setFilterDisplay","useEffect","welcomeItem","document","querySelectorAll","delay","forEach","item","setTimeout","style","opacity","handleChange","e","oldList","map","job","title","toLowercase","location","newList","filter","includes","toLocaleLowerCase","open","setOpen","selectedJob","selectJob","handleClickOpen","handleClose","numJobs","length","numPages","Math","ceil","activeStep","setActiveStep","jobsOnPage","slice","scrollToTop","c","documentElement","scrollTop","body","window","requestAnimationFrame","scrollTo","handleNext","prevActiveStep","handleBack","target","value","i","console","log"],"mappings":"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","sourcesContent":["import React, {useState}from 'react'\nimport Typography from '@material-ui/core/Typography';\n import Job from './Job';\nimport JobModal from './JobModal';\nimport Hero from \"../src/components/Hero\";\nimport Banner from \"../src/components/Banner\";\nimport Filter from './filter';\nimport MobileStepper from '@material-ui/core/MobileStepper';\nimport Button from '@material-ui/core/Button';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\n\nexport default function Jobs({jobs}) {\n  const [word,setWord] = useState(\"\");\n  const [filterDisplay,setFilterDisplay]=useState([]);\n    React.useEffect(() => {\n        const welcomeItem= document.querySelectorAll('.welcome-item');\n        let delay = 0;\n        welcomeItem.forEach(item => {\n            setTimeout(() => item.style.opacity = 1, delay);\n            delay += 500;\n        })\n\n\n    }, []);\n\n    \nconst handleChange = e =>{\n  setWord(e);\n  let  oldList = jobs.map(job=>{\n    return {title:job.title.toLowercase(),location:job.title.location}\n  })\n  if(word !== \"\"){\n    let newList=[];\n    newList = oldList.filter(job =>\n      job.title.includes(word.toLocaleLowerCase())\n      );\n      setFilterDisplay(newList);\n  }\n  else{\n    setFilterDisplay(jobs);\n  }\n}\n  \n\n    // modal\n    const [open, setOpen] = React.useState(false);\n    const [selectedJob, selectJob] = React.useState({});\n    function handleClickOpen() {\n      setOpen(true);\n    }  \n    function handleClose() {\n      setOpen(false);\n    }\n    // pagination\n    const numJobs = jobs.length;\n    const numPages = Math.ceil(numJobs / 50);\n    const [activeStep, setActiveStep] = React.useState(0);\n    const jobsOnPage = jobs.slice(activeStep * 50, (activeStep * 50) + 50);\n\n    // step == 0, show 0-49\n    // step == 1, show 50 - 99\n\n    function scrollToTop () {\n        const c = document.documentElement.scrollTop || document.body.scrollTop;\n        if (c > 0) {\n          window.requestAnimationFrame(scrollToTop);\n          window.scrollTo(0, c - c / 8);\n        }\n      };\n\n    function handleNext() {\n        setActiveStep(prevActiveStep => prevActiveStep + 1);\n        scrollToTop();\n    }\n\n    function handleBack() {\n        setActiveStep(prevActiveStep => prevActiveStep - 1);\n        scrollToTop();\n    }    \n\n    return (\n    \n        <div className=\"jobs\">\n        \n          <Hero>\n        <Banner>\n        </Banner>\n      </Hero>\n        \n            <JobModal open={open} job={selectedJob} handleClose={handleClose} />\n      <div>\n        <Filter   value={word} handleChange={e =>handleChange(e.target.value)}/>\n      </div>\n            <Typography variant=\"h4\" component=\"h1\">\n                Entry Level  Software Jobs\n            </Typography>\n            <Typography variant=\"h6\" component=\"h2\">\n                Found {numJobs} Jobs\n            </Typography>\n            {\n                filterDisplay.map(\n                    (job, i) => <Job key={i} job={job} onClick={() => {\n                        console.log('clicked')\n                        handleClickOpen();\n                        selectJob(job)\n                    }} />\n                )\n            }\n            <div>\n                Page {activeStep + 1} of {numPages}\n            </div>\n            <MobileStepper\n                variant=\"progress\"\n                steps={numPages}\n                position=\"static\"\n                activeStep={activeStep}\n                nextButton={\n                    <Button size=\"small\" onClick={handleNext} disabled={activeStep === numPages - 1}>\n                    Next\n                    <KeyboardArrowRight />\n                    </Button>\n                }\n                backButton={\n                    <Button size=\"small\" onClick={handleBack} disabled={activeStep === 0}>\n                    <KeyboardArrowLeft />\n                    Back\n                    </Button>\n                }\n            />\n  </div>\n\n    )\n}"]},"metadata":{},"sourceType":"module"}